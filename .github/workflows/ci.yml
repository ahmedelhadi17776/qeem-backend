name: Backend CI

on:
  pull_request:
    branches: [develop, main]
  push:
    branches: [develop, main]

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"
          cache: "pip"
          cache-dependency-path: requirements.txt

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install black flake8 mypy pytest pytest-cov

      - name: Lint (Black)
        run: black --check app

      - name: Lint (Flake8)
        run: flake8 app

      - name: Type check (mypy)
        run: mypy --ignore-missing-imports app

      - name: Run tests
        env:
          DATABASE_URL: sqlite:///./test_ci.db
        run: pytest --cov=app --cov-report=xml

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3
        with:
          file: ./coverage.xml
          flags: backend
          name: backend-coverage

  security:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"

      - name: Install dependencies
        run: |
          pip install bandit safety

      - name: Run security scan
        run: |
          bandit -r app/
          safety check

  docker:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build Docker image
        run: docker build -t qeem-backend:test .

      - name: Test Docker image
        run: |
          docker run --rm -d --name qeem-test -p 8000:8000 \
            -e ENVIRONMENT=ci \
            -e DATABASE_URL=sqlite:///./test_ci.db \
            qeem-backend:test
          # wait up to 30s for readiness
          for i in {1..30}; do
            if curl -sf http://localhost:8000/health > /dev/null; then
              echo "Service is up"; break
            fi
            sleep 1
          done
          curl -f http://localhost:8000/health
          docker stop qeem-test
